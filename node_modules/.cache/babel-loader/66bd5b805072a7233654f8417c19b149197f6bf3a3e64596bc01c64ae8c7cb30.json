{"ast":null,"code":"var _jsxFileName = \"/Users/ryanschmid/Programming/new_website/fifth_build/src/App.js\",\n  _s = $RefreshSig$();\n// import './App.css';\n// import Button from '@mui/material/Button';\n// // import MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\n// import styled, { ThemeProvider } from 'styled-components';\n// import useLocalStorage from 'use-local-storage'\n// // import MyButton from \"./components/Button/MyButton\"\n\n// // import theme from \"./theme\"\n\n// const StyledButton = styled(Button)`\n//   && {\n//     background-color: var(--text-secondary);\n//     color: var(--accent);\n//     /* Add any other custom styles */\n//   }\n// `;\n\n// function App() {\n//   const defaultDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n//   const [theme, setTheme] = useLocalStorage('theme', defaultDark ? 'dark' : 'light');\n\n//   const switchTheme = () => {\n//     const newTheme = theme === 'light' ? 'dark' : 'light';\n//     console.log(\"theme: \" + newTheme)\n//     setTheme(newTheme);\n//   }\n\n//   return (\n//     <ThemeProvider theme={{ mode: theme }}>\n//       <div data-theme={theme}>\n//         <StyledButton onClick={switchTheme}>Switch to {theme === 'light' ? 'dark': 'light' } Theme</StyledButton>\n//         {/* <MyButton onClick={switchTheme} text=\"Switch Theme\" /> */}\n\n//       </div>\n//     </ThemeProvider>\n//   )\n// }\n\n// export default App;\n\nimport './App.css';\nimport useLocalStorage from 'use-local-storage';\nimport StyledButton from './StyledButton.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const defaultDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const [theme, setTheme] = useLocalStorage('theme', defaultDark ? 'dark' : 'light');\n  const switchTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    console.log(\"theme: \" + newTheme);\n    setTheme(newTheme);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-theme\": theme,\n    children: /*#__PURE__*/_jsxDEV(StyledButton, {\n      onClick: switchTheme,\n      children: [\"Switch to \", theme === 'light' ? 'dark' : 'light', \" Theme\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cU7RfcDtWjaFuZGISXTRa2p1rXs=\", false, function () {\n  return [useLocalStorage];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useLocalStorage","StyledButton","jsxDEV","_jsxDEV","App","_s","defaultDark","window","matchMedia","matches","theme","setTheme","switchTheme","newTheme","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryanschmid/Programming/new_website/fifth_build/src/App.js"],"sourcesContent":["// import './App.css';\n// import Button from '@mui/material/Button';\n// // import MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\n// import styled, { ThemeProvider } from 'styled-components';\n// import useLocalStorage from 'use-local-storage'\n// // import MyButton from \"./components/Button/MyButton\"\n\n// // import theme from \"./theme\"\n\n// const StyledButton = styled(Button)`\n//   && {\n//     background-color: var(--text-secondary);\n//     color: var(--accent);\n//     /* Add any other custom styles */\n//   }\n// `;\n\n// function App() {\n//   const defaultDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n//   const [theme, setTheme] = useLocalStorage('theme', defaultDark ? 'dark' : 'light');\n\n//   const switchTheme = () => {\n//     const newTheme = theme === 'light' ? 'dark' : 'light';\n//     console.log(\"theme: \" + newTheme)\n//     setTheme(newTheme);\n//   }\n\n//   return (\n//     <ThemeProvider theme={{ mode: theme }}>\n//       <div data-theme={theme}>\n//         <StyledButton onClick={switchTheme}>Switch to {theme === 'light' ? 'dark': 'light' } Theme</StyledButton>\n//         {/* <MyButton onClick={switchTheme} text=\"Switch Theme\" /> */}\n      \n//       </div>\n//     </ThemeProvider>\n//   )\n// }\n\n// export default App;\n\n\nimport './App.css';\nimport useLocalStorage from 'use-local-storage'\nimport StyledButton from './StyledButton.js';\n\nfunction App() {\n  const defaultDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const [theme, setTheme] = useLocalStorage('theme', defaultDark ? 'dark' : 'light');\n\n  const switchTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    console.log(\"theme: \" + newTheme)\n    setTheme(newTheme);\n  }\n\n  return (\n    <div data-theme={theme}>\n      <StyledButton onClick={switchTheme}>Switch to {theme === 'light' ? 'dark': 'light' } Theme</StyledButton>\n    </div>\n  )\n}\n\nexport default App;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA,OAAO,WAAW;AAClB,OAAOA,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,YAAY,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;EAC7E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,eAAe,CAAC,OAAO,EAAEM,WAAW,GAAG,MAAM,GAAG,OAAO,CAAC;EAElF,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGH,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDI,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGF,QAAQ,CAAC;IACjCF,QAAQ,CAACE,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEV,OAAA;IAAK,cAAYO,KAAM;IAAAM,QAAA,eACrBb,OAAA,CAACF,YAAY;MAACgB,OAAO,EAAEL,WAAY;MAAAI,QAAA,GAAC,YAAU,EAACN,KAAK,KAAK,OAAO,GAAG,MAAM,GAAE,OAAO,EAAE,QAAM;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtG,CAAC;AAEV;AAAChB,EAAA,CAfQD,GAAG;EAAA,QAEgBJ,eAAe;AAAA;AAAAsB,EAAA,GAFlClB,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}